name: turnip-release

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  branch_version: "24.3"

jobs:
  start_building_turnip_arm64:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Prepare environment
      run: |
        sudo sed -Ei 's/^# deb-src /deb-src /' /etc/apt/sources.list
        sudo sed -i 's/^Types: deb$/Types: deb deb-src/g' /etc/apt/sources.list.d/*.sources
        sudo apt update
        sudo apt build-dep mesa -y
    
    - name: Set up Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y meson ninja-build patchelf unzip curl python3-pip flex bison zip git dpkg-dev debhelper
    
    - name: Install or Upgrade Meson
      run: |
        python3 -m pip install --upgrade pip
        python3 -m pip install --upgrade meson

    - name: Create Work Directory
      run: |
        mkdir -p turnip_arm64_workdir
        cd turnip_arm64_workdir

    - name: Download and Extract Android NDK
      run: |
        cd turnip_arm64_workdir
        ndkver="android-ndk-r26c"
        if [ ! -d "$ndkver" ]; then
          curl -LO https://dl.google.com/android/repository/"$ndkver"-linux.zip
          unzip "$ndkver"-linux.zip
        fi

    - name: Clone Mesa Source
      run: |
        cd turnip_arm64_workdir
        git clone --depth=1 --branch ${{ env.branch_version }} https://gitlab.freedesktop.org/mesa/mesa.git
        cd mesa

    - name: Clone and Apply Patches
      run: |
        cd $GITHUB_WORKSPACE/turnip_arm64_workdir
        git clone https://github.com/MastaG/mesa-turnip-ppa.git mesa-turnip
        cd mesa
        for patch in $GITHUB_WORKSPACE/turnip_arm64_workdir/mesa-turnip/turnip-patches/*.patch; do
          echo "Applying patch $patch"
          git apply "$patch"
        done
        echo "All patches applied successfully."

    - name: Modify debian/rules for KGSL
      run: |
        cd $GITHUB_WORKSPACE/turnip_arm64_workdir/mesa  # Navigate to the correct directory
        sed -i 's/GALLIUM_DRIVERS += freedreno$/GALLIUM_DRIVERS += freedreno\n\tconfflags_GALLIUM += -Dfreedreno-kmds=msm,kgsl/g' debian/rules

    - name: Build Mesa for Android ARM64
      run: |
        cd turnip_arm64_workdir/mesa
        ndk="$PWD/../android-ndk-r26c/toolchains/llvm/prebuilt/linux-x86_64/bin"
        if [ ! -f "$ndk/aarch64-linux-android31-clang" ]; then
          echo "Compiler not found at $ndk/aarch64-linux-android31-clang" && exit 1
        fi
        cat <<EOF > "android-aarch64"
        [binaries]
        ar = '$ndk/llvm-ar'
        c = ['ccache', '$ndk/aarch64-linux-android31-clang']
        cpp = ['ccache', '$ndk/aarch64-linux-android31-clang++', '-fno-exceptions', '-fno-unwind-tables', '-fno-asynchronous-unwind-tables', '-static-libstdc++']
        c_ld = 'lld'
        cpp_ld = 'lld'
        strip = '$ndk/aarch64-linux-android-strip'
        pkgconfig = ['env', 'PKG_CONFIG_LIBDIR=$PWD/pkgconfig', '/usr/bin/pkg-config']
        [host_machine]
        system = 'android'
        cpu_family = 'aarch64'
        cpu = 'armv8'
        endian = 'little'
        EOF
        mkdir -p build-android-aarch64
        meson setup build-android-aarch64 --cross-file "$PWD/android-aarch64" \
            -Dbuildtype=release -Dplatforms=android -Dplatform-sdk-version=31 \
            -Dandroid-stub=true -Dgallium-drivers= -Dvulkan-drivers=freedreno \
            -Dvulkan-beta=true -Dfreedreno-kmds=kgsl -Db_lto=true
        ninja -C build-android-aarch64

    - name: Patchelf to Match Soname and Package ARM64
      run: |
        cd turnip_arm64_workdir/mesa/build-android-aarch64/src/freedreno/vulkan
        cp libvulkan_freedreno.so "$GITHUB_WORKSPACE/turnip_arm64_workdir"
        cd "$GITHUB_WORKSPACE/turnip_arm64_workdir"
        patchelf --set-soname vulkan.adreno.so libvulkan_freedreno.so

        # Create Debian package structure
        mkdir -p turnip_${{ env.branch_version }}_arm64/DEBIAN
        mkdir -p turnip_${{ env.branch_version }}_arm64/usr/lib/aarch64-linux-gnu
        mkdir -p turnip_${{ env.branch_version }}_arm64/usr/share/vulkan/icd.d

        # Copy files to package structure
        cp libvulkan_freedreno.so turnip_${{ env.branch_version }}_arm64/usr/lib/aarch64-linux-gnu/libvulkan_freedreno.so

        # Create the ICD JSON file
        cat <<EOF > turnip_${{ env.branch_version }}_arm64/usr/share/vulkan/icd.d/freedreno_icd.aarch64.json
        {
            "ICD": {
                "api_version": "1.1.274",
                "library_path": "/usr/lib/aarch64-linux-gnu/libvulkan_freedreno.so"
            },
            "file_format_version": "1.0.0"
        }
        EOF

        # Create control file
        cat <<EOL > turnip_${{ env.branch_version }}_arm64/DEBIAN/control
        Package: mesa-vulkan-drivers
        Source: mesa
        Version: ${{ env.branch_version }}-devel-$(date +%Y%m%d)
        Architecture: arm64
        Maintainer: @sabamdarif
        Installed-Size: 26658
        Depends: libvulkan1
        Provides: vulkan-icd
        Section: libs
        Priority: optional
        Multi-Arch: same
        Homepage: https://mesa3d.org/
        Description: Mesa Vulkan graphics drivers
         Vulkan is a low-overhead 3D graphics and compute API. This package
         includes Vulkan drivers provided by the Mesa project.
        EOL

        # Build the package
        dpkg-deb --build turnip_${{ env.branch_version }}_arm64

    - name: Set Release Date
      id: set_date
      run: echo "RELEASE_DATE=$(date +'%m-%Y')" >> $GITHUB_ENV

    - name: Upload ARM64 Artifact to Release
      uses: softprops/action-gh-release@v2
      with:
        files: ${{ github.workspace }}/turnip_arm64_workdir/turnip_${{ env.branch_version }}_arm64.deb
        token: ${{ secrets.GITHUB_TOKEN }}
        name: turnip ubuntu android ${{ env.branch_version }}-devel-${{ env.RELEASE_DATE }}
        tag_name: turnip_${{ env.branch_version }}-${{ env.RELEASE_DATE }}
        draft: false
        prerelease: false

  start_building_turnip_armhf:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Prepare Environment
      run: |
        sudo sed -Ei 's/^# deb-src /deb-src /' /etc/apt/sources.list
        sudo sed -i 's/^Types: deb$/Types: deb deb-src/g' /etc/apt/sources.list.d/*.sources
        sudo apt update
        sudo apt build-dep mesa -y

    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y meson ninja-build patchelf unzip curl python3-pip flex bison zip git dpkg-dev debhelper

    - name: Install or Upgrade Meson
      run: |
        python3 -m pip install --upgrade pip
        python3 -m pip install --upgrade meson

    - name: Create Work Directory
      run: |
        mkdir -p turnip_armhf_workdir
        cd turnip_armhf_workdir

    - name: Download and Extract Android NDK
      run: |
        cd turnip_armhf_workdir
        ndkver="android-ndk-r26c"
        if [ ! -d "$ndkver" ]; then
          curl -LO https://dl.google.com/android/repository/"$ndkver"-linux.zip
          unzip "$ndkver"-linux.zip
        fi

    - name: Clone Mesa Source
      run: |
        cd turnip_armhf_workdir
        git clone --depth=1 --branch ${{ env.branch_version }} https://gitlab.freedesktop.org/mesa/mesa.git
        cd mesa

    - name: Clone and Apply Patches
      run: |
        cd $GITHUB_WORKSPACE/turnip_armhf_workdir
        git clone https://github.com/MastaG/mesa-turnip-ppa.git mesa-turnip
        cd mesa
        for patch in $GITHUB_WORKSPACE/turnip_armhf_workdir/mesa-turnip/turnip-patches/*.patch; do
          echo "Applying patch $patch"
          git apply "$patch"
        done
        echo "All patches applied successfully."

    - name: Modify debian/rules for KGSL
      run: |
        cd $GITHUB_WORKSPACE/turnip_armhf_workdir/mesa  # Navigate to the correct directory
        sed -i 's/GALLIUM_DRIVERS += freedreno$/GALLIUM_DRIVERS += freedreno\n\tconfflags_GALLIUM += -Dfreedreno-kmds=msm,kgsl/g' debian/rules

    - name: Build Mesa for ARM (armhf)
      run: |
        cd turnip_armhf_workdir/mesa
        ndk="$PWD/../android-ndk-r26c/toolchains/llvm/prebuilt/linux-x86_64/bin"
        if [ ! -f "$ndk/armv7a-linux-androideabi31-clang" ]; then
          echo "Compiler not found at $ndk/armv7a-linux-androideabi31-clang" && exit 1
        fi
        cat <<EOF > "android-armhf"
        [binaries]
        ar = '$ndk/llvm-ar'
        c = ['ccache', '$ndk/armv7a-linux-androideabi31-clang']
        cpp = ['ccache', '$ndk/armv7a-linux-androideabi31-clang++', '-fno-exceptions', '-fno-unwind-tables', '-fno-asynchronous-unwind-tables', '-static-libstdc++']
        c_ld = 'lld'
        cpp_ld = 'lld'
        strip = '$ndk/arm-linux-androideabi-strip'
        pkgconfig = ['env', 'PKG_CONFIG_LIBDIR=$PWD/pkgconfig', '/usr/bin/pkg-config']
        [host_machine]
        system = 'android'
        cpu_family = 'arm'
        cpu = 'armv7'
        endian = 'little'
        EOF
        mkdir -p build-android-armhf
        meson setup build-android-armhf --cross-file "$PWD/android-armhf" \
          -Dbuildtype=release -Dplatforms=android -Dplatform-sdk-version=31 \
          -Dandroid-stub=true -Dgallium-drivers= -Dvulkan-drivers=freedreno \
          -Dvulkan-beta=true -Dfreedreno-kmds=kgsl -Db_lto=true
        ninja -C build-android-armhf

    - name: Patchelf to Match Soname and Package Armhf
      run: |
        cd turnip_armhf_workdir/mesa/build-android-armhf/src/freedreno/vulkan
        cp libvulkan_freedreno.so "$GITHUB_WORKSPACE/turnip_armhf_workdir"
        cd "$GITHUB_WORKSPACE/turnip_armhf_workdir"
        patchelf --set-soname vulkan.adreno.so libvulkan_freedreno.so

        # Create Debian package structure
        mkdir -p turnip_${{ env.branch_version }}_armhf/DEBIAN
        mkdir -p turnip_${{ env.branch_version }}_armhf/usr/lib/arm-linux-gnueabihf
        mkdir -p turnip_${{ env.branch_version }}_armhf/usr/share/vulkan/icd.d

        # Copy files to package structure
        cp libvulkan_freedreno.so turnip_${{ env.branch_version }}_armhf/usr/lib/arm-linux-gnueabihf/libvulkan_freedreno.so

        # Create the ICD JSON file
        cat <<EOF > turnip_${{ env.branch_version }}_armhf/usr/share/vulkan/icd.d/freedreno_icd.armhf.json
        {
            "ICD": {
                "api_version": "1.1.274",
                "library_path": "/usr/lib/arm-linux-gnueabihf/libvulkan_freedreno.so"
            },
            "file_format_version": "1.0.0"
        }
        EOF

        # Create control file
        cat <<EOL > turnip_${{ env.branch_version }}_armhf/DEBIAN/control
        Package: mesa-vulkan-drivers
        Source: mesa
        Version: ${{ env.branch_version }}-devel-$(date +%Y%m%d)
        Architecture: armhf
        Maintainer: @sabamdarif
        Installed-Size: 26658
        Depends: libvulkan1
        Provides: vulkan-icd
        Section: libs
        Priority: optional
        Multi-Arch: same
        Homepage: https://mesa3d.org/
        Description: Mesa Vulkan graphics drivers
         Vulkan is a low-overhead 3D graphics and compute API. This package
         includes Vulkan drivers provided by the Mesa project.
        EOL

        # Build the package
        dpkg-deb --build turnip_${{ env.branch_version }}_armhf

    - name: Set Release Date
      id: set_date
      run: echo "RELEASE_DATE=$(date +'%m-%Y')" >> $GITHUB_ENV

    - name: Upload ARMHF Artifact to Release
      uses: softprops/action-gh-release@v2
      with:
        files: ${{ github.workspace }}/turnip_armhf_workdir/turnip_${{ env.branch_version }}_armhf.deb
        token: ${{ secrets.GITHUB_TOKEN }}
        name: turnip ubuntu android ${{ env.branch_version }}-devel-${{ env.RELEASE_DATE }}
        tag_name: turnip_${{ env.branch_version }}-${{ env.RELEASE_DATE }}
        draft: false
        prerelease: false
